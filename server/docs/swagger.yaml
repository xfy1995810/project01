basePath: /api/v1
definitions:
  models.CasbinInfo:
    properties:
      method:
        type: string
      path:
        type: string
    type: object
  models.CommonSysRole:
    properties:
      id:
        type: integer
      name:
        type: string
      remark:
        type: string
      state:
        type: boolean
    type: object
  models.CommonSysUser:
    properties:
      chinese_name:
        example: 中文名
        type: string
      id:
        type: integer
      username:
        example: 用户名
        type: string
    type: object
  models.Meta:
    properties:
      icon:
        type: string
      keepAlive:
        type: boolean
      rank:
        type: integer
      showLink:
        type: boolean
      title:
        type: string
    type: object
  models.ReqAddApi:
    properties:
      category:
        maxLength: 50
        minLength: 1
        type: string
      method:
        enum:
        - GET
        - POST
        - DELETE
        - PUT
        type: string
      name:
        maxLength: 100
        minLength: 1
        type: string
      path:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - category
    - method
    - name
    - path
    type: object
  models.ReqAddMenu:
    properties:
      component:
        maxLength: 64
        type: string
      icon:
        maxLength: 64
        type: string
      keepAlive:
        type: boolean
      name:
        maxLength: 64
        minLength: 1
        type: string
      parentId:
        type: integer
      path:
        maxLength: 64
        minLength: 1
        type: string
      rank:
        type: integer
      showLink:
        type: boolean
      title:
        maxLength: 64
        minLength: 1
        type: string
    required:
    - name
    - path
    - title
    type: object
  models.ReqAddRole:
    properties:
      name:
        maxLength: 20
        minLength: 1
        type: string
      remark:
        maxLength: 100
        minLength: 0
        type: string
      state:
        type: boolean
      user_ids:
        items:
          type: integer
        type: array
    required:
    - name
    type: object
  models.ReqAddUser:
    properties:
      chinese_name:
        example: 中文名
        type: string
      email:
        example: 邮箱
        type: string
      password:
        example: 密码
        type: string
      phone:
        example: 电话号
        type: string
      state:
        type: boolean
      username:
        example: 用户名
        type: string
    type: object
  models.ReqEditApiByID:
    properties:
      category:
        maxLength: 50
        minLength: 1
        type: string
      method:
        enum:
        - GET
        - POST
        - DELETE
        - PUT
        type: string
      name:
        maxLength: 100
        minLength: 1
        type: string
      path:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - method
    type: object
  models.ReqEditMenuByID:
    properties:
      component:
        maxLength: 64
        type: string
      icon:
        maxLength: 64
        type: string
      keepAlive:
        type: boolean
      name:
        maxLength: 64
        minLength: 1
        type: string
      path:
        maxLength: 64
        minLength: 1
        type: string
      rank:
        type: integer
      showLink:
        type: boolean
      title:
        maxLength: 64
        minLength: 1
        type: string
    required:
    - name
    - path
    - title
    type: object
  models.ReqEditRoleByID:
    properties:
      name:
        maxLength: 20
        minLength: 1
        type: string
      remark:
        maxLength: 100
        minLength: 0
        type: string
      state:
        type: boolean
      user_ids:
        items:
          type: integer
        type: array
    required:
    - name
    type: object
  models.ReqEditRoleStateByID:
    properties:
      state:
        type: boolean
    type: object
  models.ReqEditUserByID:
    properties:
      chinese_name:
        example: 中文名
        type: string
      email:
        example: 邮箱
        type: string
      phone:
        example: 电话号
        type: string
      state:
        type: boolean
    type: object
  models.ReqEditUserPasswordByID:
    properties:
      new_password:
        example: 新密码
        type: string
      password:
        example: 当前密码
        type: string
    type: object
  models.ReqEditUserStateByID:
    properties:
      state:
        type: boolean
    type: object
  models.ReqLogin:
    properties:
      captcha:
        example: "623123"
        type: string
      captcha_id:
        type: string
      password:
        example: 密码
        maxLength: 60
        minLength: 6
        type: string
      username:
        example: 用户名
        type: string
    required:
    - captcha
    - captcha_id
    - password
    - username
    type: object
  models.ReqSetRoleApiAuth:
    properties:
      api_infos:
        items:
          type: string
        type: array
    required:
    - api_infos
    type: object
  models.RespCaptcha:
    properties:
      captcha_id:
        type: string
      captcha_path:
        type: string
    type: object
  models.RespGetAllApiList:
    properties:
      apis:
        items:
          properties:
            category:
              type: string
            id:
              type: integer
            method:
              type: string
            name:
              type: string
            path:
              type: string
          type: object
        type: array
      categories:
        items:
          type: string
        type: array
      total:
        type: integer
    type: object
  models.RespGetAllUserList:
    properties:
      total:
        type: integer
      users:
        items:
          properties:
            chinese_name:
              example: 中文名
              type: string
            id:
              type: integer
            username:
              example: 用户名
              type: string
          type: object
        type: array
    type: object
  models.RespGetApiByID:
    properties:
      category:
        type: string
      created_at:
        example: 创建时间
        type: string
      created_by:
        $ref: '#/definitions/models.CommonSysUser'
      created_id:
        type: integer
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      path:
        type: string
      updated_at:
        example: 更新时间
        type: string
      updated_by:
        $ref: '#/definitions/models.CommonSysUser'
      updated_id:
        type: integer
    type: object
  models.RespGetApiList:
    properties:
      apis:
        items:
          $ref: '#/definitions/models.RespGetApiByID'
        type: array
      total:
        type: integer
    type: object
  models.RespGetMenuByID:
    properties:
      children:
        items:
          $ref: '#/definitions/models.SysMenu'
        type: array
      component:
        type: string
      created_at:
        example: 创建时间
        type: string
      created_by:
        $ref: '#/definitions/models.CommonSysUser'
      created_id:
        type: integer
      id:
        type: integer
      meta:
        $ref: '#/definitions/models.Meta'
      name:
        type: string
      parentId:
        type: integer
      path:
        type: string
      roles:
        items:
          $ref: '#/definitions/models.SysRole'
        type: array
      updated_at:
        example: 更新时间
        type: string
      updated_by:
        $ref: '#/definitions/models.CommonSysUser'
      updated_id:
        type: integer
    type: object
  models.RespGetMenuList:
    properties:
      menus:
        items:
          $ref: '#/definitions/models.RespGetMenuByID'
        type: array
    type: object
  models.RespGetRoleByID:
    properties:
      created_at:
        example: 创建时间
        type: string
      created_by:
        $ref: '#/definitions/models.CommonSysUser'
      created_id:
        type: integer
      id:
        type: integer
      menus:
        description: 角色菜单多对多关系
        items:
          $ref: '#/definitions/models.SysMenu'
        type: array
      name:
        type: string
      remark:
        type: string
      state:
        type: boolean
      updated_at:
        example: 更新时间
        type: string
      updated_by:
        $ref: '#/definitions/models.CommonSysUser'
      updated_id:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.CommonSysUser'
        type: array
    type: object
  models.RespGetRoleList:
    properties:
      roles:
        items:
          $ref: '#/definitions/models.RespGetRoleByID'
        type: array
      total:
        type: integer
    type: object
  models.RespGetUserByID:
    properties:
      chinese_name:
        example: 中文名
        type: string
      created_at:
        example: 创建时间
        type: string
      email:
        example: 邮箱
        type: string
      id:
        type: integer
      phone:
        example: 手机号
        type: string
      roles:
        items:
          $ref: '#/definitions/models.CommonSysRole'
        type: array
      state:
        type: boolean
      updated_at:
        example: 更新时间
        type: string
      username:
        example: 用户名
        type: string
    type: object
  models.RespGetUserList:
    properties:
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.RespGetUserByID'
        type: array
    type: object
  models.RespLogin:
    properties:
      accessToken:
        example: 访问token
        type: string
      chinese_name:
        example: 中文名
        type: string
      id:
        type: integer
      username:
        example: 用户名
        type: string
    type: object
  models.RespWelcome:
    properties:
      user_count:
        type: integer
    type: object
  models.SysMenu:
    properties:
      children:
        items:
          $ref: '#/definitions/models.SysMenu'
        type: array
      component:
        type: string
      created_at:
        example: 创建时间
        type: string
      created_by:
        $ref: '#/definitions/models.CommonSysUser'
      created_id:
        type: integer
      id:
        type: integer
      meta:
        $ref: '#/definitions/models.Meta'
      name:
        type: string
      parentId:
        type: integer
      path:
        type: string
      roles:
        items:
          $ref: '#/definitions/models.SysRole'
        type: array
      updated_at:
        example: 更新时间
        type: string
      updated_by:
        $ref: '#/definitions/models.CommonSysUser'
      updated_id:
        type: integer
    type: object
  models.SysRole:
    properties:
      created_at:
        example: 创建时间
        type: string
      created_by:
        $ref: '#/definitions/models.CommonSysUser'
      created_id:
        type: integer
      id:
        type: integer
      menus:
        description: 角色菜单多对多关系
        items:
          $ref: '#/definitions/models.SysMenu'
        type: array
      name:
        type: string
      remark:
        type: string
      state:
        type: boolean
      updated_at:
        example: 更新时间
        type: string
      updated_by:
        $ref: '#/definitions/models.CommonSysUser'
      updated_id:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.SysUser'
        type: array
    type: object
  models.SysUser:
    properties:
      chinese_name:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      is_super:
        type: boolean
      phone:
        type: string
      roles:
        items:
          $ref: '#/definitions/models.SysRole'
        type: array
      state:
        description: State 1 启用，2 禁用
        type: boolean
      updated_at:
        type: string
      username:
        type: string
    type: object
  resp.Result:
    properties:
      data: {}
      msg:
        example: 成功
        type: string
      status:
        default: 200
        type: integer
      timestamp:
        example: 响应时间
        type: string
    type: object
info:
  contact: {}
  title: Dcss Swagger API
  version: "1.0"
paths:
  /auth/all_users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 获取所有的用户
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/models.RespGetAllUserList'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取所有的用户,提供给角色添加用户使用
      tags:
      - 用户相关
  /auth/role:
    post:
      parameters:
      - description: 角色名 备注 状态 []{用户}
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ReqAddRole'
      produces:
      - application/json
      responses:
        "200":
          description: 添加角色
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - ApiKeyAuth: []
      summary: 添加角色
      tags:
      - 角色相关
  /auth/role/{id}:
    delete:
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来删除角色
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - ApiKeyAuth: []
      summary: 通过id来删除角色
      tags:
      - 角色相关
    get:
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来获取角色信息
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/models.RespGetRoleByID'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 通过id来获取角色信息
      tags:
      - 角色相关
    put:
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      - description: 名称 备注 状态 []{用户ID}
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ReqEditRoleByID'
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来修改角色信息
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - ApiKeyAuth: []
      summary: 通过id来修改角色信息
      tags:
      - 角色相关
  /auth/role/{id}/api_auth:
    post:
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      - description: ApiIds[]int
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ReqSetRoleApiAuth'
      produces:
      - application/json
      responses:
        "200":
          description: 通过角色id来绑定Api权限
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - ApiKeyAuth: []
      summary: 通过角色id来绑定Api权限
      tags:
      - 角色相关
  /auth/role/{id}/menu_auth:
    post:
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      - description: MenuIds[]int
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ReqSetRoleApiAuth'
      produces:
      - application/json
      responses:
        "200":
          description: 通过角色id来绑定菜单权限
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - ApiKeyAuth: []
      summary: 通过角色id来绑定菜单权限
      tags:
      - 角色相关
  /auth/role/{id}/state/:
    put:
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      - description: 中文名 电话 邮箱 状态
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ReqEditRoleStateByID'
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来修改角色状态
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - ApiKeyAuth: []
      summary: 通过id来修改角色状态
      tags:
      - 角色相关
  /auth/roles:
    get:
      parameters:
      - description: 过滤关键字
        in: query
        name: query
        type: string
      - description: 页码
        in: query
        name: pagenum
        type: integer
      - description: 返回数量
        in: query
        name: pagesize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取所有的角色
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/models.RespGetRoleList'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取所有的角色
      tags:
      - 角色相关
  /auth/roles/{id}/api_auth:
    get:
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 根据角色id来获取api权限
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.CasbinInfo'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: 根据角色id来获取api权限
      tags:
      - 角色相关
  /auth/roles/{id}/menu_auth:
    get:
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 根据角色id来获取菜单权限
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  items:
                    type: integer
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: 根据角色id来获取菜单权限
      tags:
      - 角色相关
  /auth/user:
    post:
      parameters:
      - description: 用户名 中文名 密码 电话 邮箱 状态
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ReqAddUser'
      produces:
      - application/json
      responses:
        "200":
          description: 添加用户账号
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - ApiKeyAuth: []
      summary: 添加用户账号
      tags:
      - 用户相关
  /auth/user/{id}:
    delete:
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来删除用户
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - ApiKeyAuth: []
      summary: 通过id来删除用户
      tags:
      - 用户相关
    get:
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来获取用户信息
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/models.RespGetUserByID'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 通过id来获取用户信息
      tags:
      - 用户相关
    put:
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 中文名 电话 邮箱 状态
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ReqEditUserByID'
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来修改用户信息
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - ApiKeyAuth: []
      summary: 通过id来修改用户信息
      tags:
      - 用户相关
  /auth/user/{id}/password/:
    put:
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 密码 确认密码 新密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ReqEditUserPasswordByID'
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来修改用户密码
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - ApiKeyAuth: []
      summary: 通过id来修改用户密码
      tags:
      - 用户相关
  /auth/user/{id}/state/:
    put:
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 中文名 电话 邮箱 状态
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ReqEditUserStateByID'
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来修改用户状态
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - ApiKeyAuth: []
      summary: 通过id来修改用户状态
      tags:
      - 用户相关
  /auth/users:
    get:
      parameters:
      - description: 过滤关键字
        in: query
        name: query
        type: string
      - description: 页码
        in: query
        name: pagenum
        type: integer
      - description: 返回数量
        in: query
        name: pagesize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户列表
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/models.RespGetUserList'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取用户列表
      tags:
      - 用户相关
  /captcha:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 生成验证码,返回包括随机数id,base64,验证码长度,是否开启验证码
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/models.RespCaptcha'
              type: object
      summary: 生成验证码
      tags:
      - 验证码相关
  /login:
    post:
      parameters:
      - description: 用户名 密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ReqLogin'
      produces:
      - application/json
      responses:
        "200":
          description: 用户登录
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/models.RespLogin'
              type: object
      summary: 用户登录
      tags:
      - 用户相关
  /system/all_apis:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 获取所有的Api
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/models.RespGetAllApiList'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取所有的Api,提供给角色添加权限使用
      tags:
      - Api相关
  /system/api:
    post:
      parameters:
      - description: 方法 路径 目录 备注
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ReqAddApi'
      produces:
      - application/json
      responses:
        "200":
          description: 添加Api
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - ApiKeyAuth: []
      summary: 添加Api
      tags:
      - Api相关
  /system/api/{id}:
    delete:
      parameters:
      - description: ApiID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来删除Api
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - ApiKeyAuth: []
      summary: 通过id来删除Api
      tags:
      - Api相关
    get:
      parameters:
      - description: ApiID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来获取Api信息
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/models.RespGetApiByID'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 通过id来获取Api信息
      tags:
      - Api相关
    put:
      parameters:
      - description: ApiID
        in: path
        name: id
        required: true
        type: integer
      - description: 方法 路径 目录 备注
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ReqEditApiByID'
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来修改Api信息
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - ApiKeyAuth: []
      summary: 通过id来修改Api信息
      tags:
      - Api相关
  /system/apis:
    get:
      parameters:
      - description: 过滤关键字
        in: query
        name: query
        type: string
      - description: 页码
        in: query
        name: pagenum
        type: integer
      - description: 返回数量
        in: query
        name: pagesize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取所有的Api
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/models.RespGetApiList'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取所有的Api
      tags:
      - Api相关
  /system/dynamic_menus:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 获取当前用户的动态菜单
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/models.SysMenu'
              type: object
      security:
      - MenuKeyAuth: []
      summary: 获取当前用户的动态菜单
      tags:
      - 菜单相关
  /system/menu:
    post:
      parameters:
      - description: 菜单名称 图标 路由名称 路由地址 文件路径 是否隐藏 菜单排序 开启菜单缓存
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ReqAddMenu'
      produces:
      - application/json
      responses:
        "200":
          description: 添加菜单
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - MenuKeyAuth: []
      summary: 添加菜单
      tags:
      - 菜单相关
  /system/menu/{id}:
    delete:
      parameters:
      - description: MenuID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来删除菜单
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - MenuKeyAuth: []
      summary: 通过id来删除菜单
      tags:
      - 菜单相关
    get:
      parameters:
      - description: MenuID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来获取菜单信息
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/models.RespGetMenuByID'
              type: object
      security:
      - MenuKeyAuth: []
      summary: 通过id来获取菜单信息
      tags:
      - 菜单相关
    put:
      parameters:
      - description: MenuID
        in: path
        name: id
        required: true
        type: integer
      - description: 菜单名称 图标 路由名称 路由地址 文件路径 是否隐藏 菜单排序 开启菜单缓存
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ReqEditMenuByID'
      produces:
      - application/json
      responses:
        "200":
          description: 通过id来修改菜单信息
          schema:
            $ref: '#/definitions/resp.Result'
      security:
      - MenuKeyAuth: []
      summary: 通过id来修改菜单信息
      tags:
      - 菜单相关
  /system/menus:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 获取所有的菜单
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/models.RespGetMenuList'
              type: object
      security:
      - MenuKeyAuth: []
      summary: 获取所有的菜单
      tags:
      - 菜单相关
  /welcome:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 获取主页相关数据
          schema:
            allOf:
            - $ref: '#/definitions/resp.Result'
            - properties:
                data:
                  $ref: '#/definitions/models.RespWelcome'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取主页相关数据
      tags:
      - 获取主页相关数据
securityDefinitions:
  ApiKeyAuth:
    description: jwt 认证
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
